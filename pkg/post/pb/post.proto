syntax = "proto3";

package api.pb.post;

option go_package = "./pkg/api/pb";

service PostService {
    rpc FollowUser(FollowUserRequest) returns (FollowUserResponse){}
    rpc UnfollowUser(UnfollowUserRequest) returns (UnfollowUserResponse){}
    rpc UploadPost(UploadPostRequest) returns (UploadPostResponse){}
    rpc DeletePost(DeletePostRequest) returns (DeletePostResponse){}
    rpc LikePost(LikePostRequest) returns (LikePostResponse){}
    rpc DislikePost(DislikePostRequest) returns (DislikePostResponse){}
    rpc TagUserInPost(TagUserInPostRequest) returns (TagUserInPostResponse){}
    rpc ReportPost(ReportPostRequest) returns (ReportPostResponse){}
    rpc CommentPost(CommentPostRequest) returns (CommentPostResponse){}
    rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse){}
    rpc DeleteComments(DeleteCommentRequest) returns (DeleteCommentResponse){}

}
// Follow user request and response messages
message FollowUserRequest {
    int64 follow_user_id = 1;
    int64 follower_user_id = 2;
}

message FollowUserResponse {
    bool success = 1;
}
// Unfollow user request and response messages
message UnfollowUserRequest {
    int64 follow_user_id = 1;
    int64 follower_user_id = 2;
}

message UnfollowUserResponse {
    int64 follower_user_id = 1;
}
// Upload post request and response messages
message UploadPostRequest {
    int64 user_id = 1;
    string content = 2;
    repeated string media_urls = 3;
}

message UploadPostResponse {
    int64 user_id = 1;
    
}
// Delete post request and response messages
message DeletePostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
}

message DeletePostResponse {
    bool success = 1;
    int64 post_id = 2;
}


// Like post request and response messages
message LikePostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
}

message LikePostResponse {
    int64 post_id = 1;
}

// Dislike post request and response messages
message DislikePostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
}

message DislikePostResponse {
    bool success = 1;
}
// Tag user in post request and response messages
message TagUserInPostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
    int64 tagged_user_id = 3;
}

message TagUserInPostResponse {
    bool success = 1;
}


message Comment {
    int64 comment_id = 1;
    int64 user_id = 2;
    string content = 3;
}

// Comment post request and response messages
message CommentPostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
    string content = 3;
}

message CommentPostResponse {
    int64 comment_id = 1;
}

// Get comments request and response messages

message GetCommentsRequest {
    int64 post_id = 1;
}

message GetCommentsResponse {
    repeated Comment comments = 1;
}


// Report post request and response messages
message ReportPostRequest {
    int64 post_id = 1;
    int64 user_id = 2;
    string reason = 3;
}

message ReportPostResponse {
    bool success = 1;
}

//Delete Comment Request and Response

message DeleteCommentRequest{
    int64 post_id = 1;
    int64 comment_id = 2;
    int64 user_id= 3;
}

message DeleteCommentResponse{
    int64 comment_id = 1;
    bool success =2 ;

}